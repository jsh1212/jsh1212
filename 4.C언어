#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

#define VALUE 10000

// 두 점 사이의 거리 계산 함수 (제곱값을 반환)
double distance_squared(double x1, double y1, double x2, double y2) {
    double dx = x2 - x1;  // x 좌표 차이
    double dy = y2 - y1;  // y 좌표 차이
    return dx * dx + dy * dy;  // 제곱된 값만 반환
}

// 제곱근을 근사적으로 계산하는 함수 (산술 제곱근을 근사)
double sqrt_approx(double value) {
    double guess = value / 2.0;
    double epsilon = 0.00001;  // 허용 오차
    while (1) {
        double temp = (guess + value / guess) / 2.0;
        if (temp - guess < epsilon && temp - guess > -epsilon) {
            break;
        }
        guess = temp;
    }
    return guess;
}

int main() {
    double x1, y1, x2, y2, x3, y3;

    // 세 점의 좌표 입력받기
    printf("세 점의 좌표를 입력하세요 (x1 y1 x2 y2 x3 y3): ");
    scanf("%lf %lf %lf %lf %lf %lf", &x1, &y1, &x2, &y2, &x3, &y3);

    // 유효성 검사 (간단히 n개의 값만 검증)
    if (x1 > VALUE || x2 > VALUE || x3 > VALUE || y1 > VALUE || y2 > VALUE || y3 > VALUE) {
        printf("입력 값이 너무 큽니다. (최대 값은 10000)\n");
        return 1;
    }

    // 세 변의 제곱된 길이 구하기
    double side1_squared = distance_squared(x1, y1, x2, y2);  // 점 1과 점 2 사이의 거리 제곱
    double side2_squared = distance_squared(x2, y2, x3, y3);  // 점 2와 점 3 사이의 거리 제곱
    double side3_squared = distance_squared(x3, y3, x1, y1);  // 점 3과 점 1 사이의 거리 제곱

    // 제곱된 값을 제곱근을 이용해 실제 길이를 계산
    double side1 = sqrt_approx(side1_squared);  // 점 1과 점 2 사이의 거리
    double side2 = sqrt_approx(side2_squared);  // 점 2와 점 3 사이의 거리
    double side3 = sqrt_approx(side3_squared);  // 점 3과 점 1 사이의 거리

    // 세 변의 길이 합 출력
    double perimeter = side1 + side2 + side3;
    printf("세 변의 길이의 합: %.6f\n", perimeter);

    return 0;
}
